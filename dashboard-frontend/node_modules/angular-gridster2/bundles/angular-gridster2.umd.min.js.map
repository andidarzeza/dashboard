{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-gridster2/lib/gridsterConfig.interface.ts","ng://angular-gridster2/lib/gridsterConfig.constant.ts","ng://angular-gridster2/lib/gridsterUtils.service.ts","ng://angular-gridster2/lib/gridster.interface.ts","ng://angular-gridster2/lib/gridsterEmptyCell.service.ts","ng://angular-gridster2/lib/gridsterCompact.service.ts","ng://angular-gridster2/lib/gridsterRenderer.service.ts","ng://angular-gridster2/lib/gridster.component.ts","ng://angular-gridster2/lib/gridsterItemComponent.interface.ts","ng://angular-gridster2/lib/gridsterSwap.service.ts","ng://angular-gridster2/lib/gridsterScroll.service.ts","ng://angular-gridster2/lib/gridsterPush.service.ts","ng://angular-gridster2/lib/gridsterDraggable.service.ts","ng://angular-gridster2/lib/gridsterPushResize.service.ts","ng://angular-gridster2/lib/gridsterResizable.service.ts","ng://angular-gridster2/lib/gridsterItem.component.ts","ng://angular-gridster2/lib/gridsterPreview.component.ts","ng://angular-gridster2/lib/gridster.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","Fit","ScrollVertical","ScrollHorizontal","Fixed","VerticalFixed","HorizontalFixed","Always","OnDragAndResize","None","CompactUp","CompactLeft","CompactUpAndLeft","CompactLeftAndUp","CompactRight","CompactUpAndRight","CompactRightAndUp","GridsterConfigService","gridType","GridType","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","setGridSize","compactType","CompactType","mobileBreakpoint","minCols","maxCols","minRows","maxRows","defaultItemCols","defaultItemRows","maxItemCols","maxItemRows","minItemCols","minItemRows","minItemArea","maxItemArea","margin","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","scrollSensitivity","scrollSpeed","initCallback","undefined","destroyCallback","gridSizeChangedCallback","itemChangeCallback","itemResizeCallback","itemInitCallback","itemRemovedCallback","itemValidateCallback","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","enableOccupiedCellDrop","emptyCellClickCallback","emptyCellContextMenuCallback","emptyCellDropCallback","emptyCellDragCallback","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","delayStart","enabled","ignoreContentClass","ignoreContent","dragHandleClass","stop","start","dropOverItems","dropOverItemsCallback","resizable","handles","e","w","se","ne","sw","nw","swap","swapWhileDragging","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","DisplayGrid","disableWindowResize","disableWarnings","scrollToNewItems","disableScrollHorizontal","disableScrollVertical","disableAutoPositionOnConflict","GridsterUtils","merge","obj1","obj2","properties","debounce","func","wait","timeout","context","args","later","clearTimeout","setTimeout","checkTouchEvent","clientX","touches","clientY","changedTouches","checkContentClassForEvent","gridster","$options","checkContentClass","target","currentTarget","checkContentClassForEmptyCellClickEvent","current","contentClass","hasAttribute","getAttribute","split","indexOf","parentNode","compareItems","a","b","y","x","Injectable","GridsterEmptyCell","destroy","initialItem","movingItem","previewStyle","emptyCellExit","updateOptions","_this","emptyCellClick","options","renderer","listen","el","emptyCellClickCb","bind","emptyCellClickTouch","emptyCellContextMenu","emptyCellContextMenuCb","emptyCellDrop","emptyCellDragDrop","zone","runOutsideAngular","emptyCellMove","emptyCellDragOver","emptyCellDrag","emptyCellMouseDown","emptyCellDragTouch","item","getValidItemFromEvent","cdRef","markForCheck","preventDefault","stopPropagation","dataTransfer","dropEffect","buttons","emptyCellMMove","emptyCellMouseMove","emptyCellMMoveTouch","emptyCellUp","emptyCellMouseUp","emptyCellUpTouch","oldItem","rect","getBoundingClientRect","scrollLeft","left","scrollTop","top","pixelsToPositionX","Math","floor","pixelsToPositionY","cols","rows","min","abs","checkCollision","GridsterComponentInterface","GridsterCompact","checkCompact","checkCompactUp","checkCompactLeft","checkCompactRight","checkCompactItem","moveUpTillCollision","moveLeftTillCollision","moveRightTillCollision","widget","widgetMovedUp","l","grid","$item","compactEnabled","itemChanged","GridsterRenderer","updateItem","mobile","clearCellPosition","setStyle","curWidth","round","curColWidth","curRowHeight","width","height","setCellPosition","marginBottom","marginRight","columns","updateGridster","addClass","removeClass1","removeClass2","removeClass3","removeClass","getGridColumnStyle","getLeftPosition","gridRows","getGridRowStyle","getTopPosition","gridColumns","d","transform","getLeftMargin","getTopMargin","GridsterComponent","nativeElement","JSON","parse","stringify","calculateLayoutDebounce","calculateLayout","curHeight","dragInProgress","emptyCell","compact","gridRenderer","checkCollisionTwoItems","item2","ngOnInit","ngOnChanges","changes","setOptions","api","optionsChanged","resize","onResize","getNextPossiblePosition","getFirstPossiblePosition","getLastPossiblePosition","clientWidth","clientHeight","offsetWidth","offsetHeight","checkIfToResize","windowResize","widgetsIndex","ngOnDestroy","scrollWidth","scrollHeight","setGridDimensions","notPlaced","max","marginWidth","marginHeight","updateGrid","setSize","drag","toggle","addItem","itemComponent","autoPositionItem","console","warn","push","removeItem","splice","collision","checkGridCollision","c","findItemWithItem","noNegativePosition","maxGridCols","maxGridRows","inColsLimits","inRowsLimits","minAreaLimit","maxAreaLimit","area","findItemsWithItem","newItem","startingFrom","colsIndex","rowsIndex","canAddToRows","canAddToColumns","tmpItem","farthestItem","reduce","prev","curr","currCoords","roundingMethod","noLimit","position","positionXToPixels","positionYToPixels","checkCollisionTwoItemsForSwaping","horizontalBoundaryItem1","horizontalBoundaryItem2","verticalBoundaryItem1","verticalBoundaryItem2","checkCollisionForSwaping","findItemWithItemForSwaping","Component","selector","template","encapsulation","ViewEncapsulation","ElementRef","decorators","type","Inject","Renderer2","ChangeDetectorRef","NgZone","Input","GridsterSwap","gridsterItem","swapedItem","swapItems","checkSwapBack","checkSwap","restoreSwapItem","setSwapItem","checkItemChanges","pushedBy","gridsterItemCollision","canBeDragged","gridsterItemCollide","copyCollisionX","copyCollisionY","copyX","copyY","GridsterItemComponentInterface","gridsterElement","resizeEvent","resizeEventType","intervalE","intervalW","intervalN","intervalS","intervalDuration","scroll","lastMouse","calculateItemPosition","resizeEventScrollType","offsetLeft","offsetTop","elemTopOffset","elemBottomOffset","cancelN","startVertical","cancelS","cancelVertical","elemRightOffset","elemLeftOffset","cancelW","startHorizontal","cancelE","cancelHorizontal","sign","setInterval","cancelScroll","clearInterval","GridsterPush","pushedItems","pushedItemsTemp","pushedItemsTempPath","pushedItemsPath","generateTempRandomId","tryPattern","fromEast","tryWest","trySouth","tryNorth","tryEast","fromWest","fromNorth","fromSouth","direction","disable","pushedItemsOrder","pushed","restoreTempItems","cleanTempIds","removeFromTempPushed","restoreItems","pushedItem","setPushedItems","checkPushBack","change","checkPushedItem","random","toString","replace","substr","filter","forEach","itemCollision","makePush","find","lastIndexOf","j","pop","removeFromPushedItem","addToTempPushed","addToPushed","tempPosition","removeFromPushed","lastPosition","path","GridsterDraggable","mousedown","touchstart","dragStart","which","dragFunction","dragMove","dragStopFunction","dragStop","mousemove","touchmove","mouseup","mouseleave","cancelOnBlur","touchend","touchcancel","diffLeft","diffTop","calculateItemPositionFromMousePosition","run","Promise","resolve","then","makeDrag","cancelDrag","positionX","positionY","positionXBackup","positionYBackup","enableDrag","dragStartFunction","dragStartDelay","cancelMouse","cancelMouseLeave","cancelTouchMove","eventMove","cancelTouchEnd","cancelTouchCancel","GridsterPushResize","row","canBeResized","backUpY","backUpRows","backUpX","backUpCols","GridsterResizable","itemBackup","bottom","right","diffRight","diffBottom","minHeight","minWidth","pushResize","directionFunction","handleN","handleW","handleS","handleE","handleNW","handleNE","handleSW","handleSE","makeResize","cancelResize","newPosition","setItemTop","setItemHeight","setItemLeft","setItemWidth","ceil","resizeEnabled","GridsterItemComponent","dragEnabled","updateItemSize","init","scrollIntoView","newValue","oldValue","GridsterPreviewComponent","GridsterModule","NgModule","declarations","imports","CommonModule","exports","providers","bootstrap","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes =\n  'none'\n  | 'compactUp'\n  | 'compactLeft'\n  | 'compactUp&Left'\n  | 'compactLeft&Up'\n  | 'compactRight'\n  | 'compactUp&Right'\n  | 'compactRight&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up',\n  CompactRight = 'compactRight',\n  CompactUpAndRight = 'compactUp&Right',\n  CompactRightAndUp = 'compactRight&Up',\n}\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  useTransformPositioning?: boolean;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  swapWhileDragging?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  disableScrollHorizontal?: boolean;\n  disableScrollVertical?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  enableOccupiedCellDrop?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n","import {CompactType, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\n\nexport const GridsterConfigService: GridsterConfig = {\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  setGridSize: false, // sets grid size depending on content\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  useTransformPositioning: true, // toggle between transform or top/left positioning of items\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  enableOccupiedCellDrop: false, // enable occupied cell drop events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined, // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false, // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  swapWhileDragging: false, // allow items to switch position while dragging\n  pushItems: false, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\n  disableScrollHorizontal: false, // disable horizontal scrolling\n  disableScrollVertical: false, // disable vertical scrolling\n  disableAutoPositionOnConflict: false  // disable auto-position of items on conflict state\n};\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterUtils {\n\n  static merge(obj1: any, obj2: any, properties: any) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n\n    return obj1;\n  }\n\n  static debounce(func: Function, wait: number): () => void {\n    let timeout: any;\n    return function () {\n      const context = this, args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  static checkTouchEvent(e: any): void {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y < b.y) {\n      return 1;\n    } else if (a.x > b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n","import {GridsterConfigS} from './gridsterConfigS.interface';\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\n\nexport abstract class GridsterComponentInterface {\n  $options: GridsterConfigS;\n  grid: Array<GridsterItemComponentInterface>;\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  checkCollisionForSwaping: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  positionXToPixels: (x: number) => number;\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  positionYToPixels: (y: number) => number;\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  findItemsWithItem: (item: GridsterItem) => Array<GridsterItemComponentInterface>;\n  checkGridCollision: (item: GridsterItem) => boolean;\n  el: any;\n  renderer: Renderer2;\n  gridRenderer: GridsterRenderer;\n  cdRef: ChangeDetectorRef;\n  options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  updateGrid: () => void;\n  movingItem: GridsterItem | null;\n  addItem: (item: GridsterItemComponentInterface) => void;\n  removeItem: (item: GridsterItemComponentInterface) => void;\n  previewStyle: (drag?: boolean) => void;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  windowResize: (() => void) | null;\n  setGridDimensions: (() => void);\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  zone: NgZone;\n  gridRows: Array<number>;\n  gridColumns: Array<number>;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterEmptyCell {\n  initialItem: GridsterItem | null;\n  emptyCellClick: Function | null;\n  emptyCellClickTouch: Function | null;\n  emptyCellContextMenu: Function | null;\n  emptyCellDrop: Function | null;\n  emptyCellDrag: Function | null;\n  emptyCellDragTouch: Function | null;\n  emptyCellMMove: Function;\n  emptyCellMMoveTouch: Function;\n  emptyCellUp: Function;\n  emptyCellUpTouch: Function;\n  emptyCellMove: Function | null;\n  emptyCellExit: Function | null;\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.initialItem;\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridster;\n    if (this.emptyCellExit) {\n      this.emptyCellExit();\n      this.emptyCellExit = null;\n    }\n  }\n\n  updateOptions(): void {\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\n      this.emptyCellClick();\n      this.emptyCellClickTouch();\n      this.emptyCellClick = null;\n      this.emptyCellClickTouch = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\n      this.gridster.options.emptyCellContextMenuCallback) {\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\n      this.emptyCellContextMenu();\n      this.emptyCellContextMenu = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\n      this.gridster.zone.runOutsideAngular(() => {\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\n      });\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\n      this.emptyCellDrop();\n      this.emptyCellMove();\n      this.emptyCellExit();\n      this.emptyCellMove = null;\n      this.emptyCellDrop = null;\n      this.emptyCellExit = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\n      this.emptyCellDrag();\n      this.emptyCellDragTouch();\n      this.emptyCellDrag = null;\n      this.emptyCellDragTouch = null;\n    }\n  }\n\n  emptyCellClickCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellClickCallback) {\n      this.gridster.options.emptyCellClickCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellContextMenuCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellContextMenuCallback) {\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragDrop(e: any): void {\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellDropCallback) {\n      this.gridster.options.emptyCellDropCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragOver(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (item) {\n      e.dataTransfer.dropEffect = 'move';\n      this.gridster.movingItem = item;\n    } else {\n      e.dataTransfer.dropEffect = 'none';\n      this.gridster.movingItem = null;\n    }\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseDown(e: any): void {\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    const leftMouseButtonCode = 1;\n    if (!item || e.buttons !== leftMouseButtonCode) {\n      return;\n    }\n    this.initialItem = item;\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n    this.gridster.zone.runOutsideAngular(() => {\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\n    });\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\n  }\n\n  emptyCellMouseMove(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (!item) {\n      return;\n    }\n\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseUp(e: any): void {\n    this.emptyCellMMove();\n    this.emptyCellMMoveTouch();\n    this.emptyCellUp();\n    this.emptyCellUpTouch();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (item) {\n      this.gridster.movingItem = item;\n    }\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n    }\n    setTimeout(() => {\n      this.initialItem = null;\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n    this.gridster.cdRef.markForCheck();\n  }\n\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.$options.margin;\n    const y = e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.$options.margin;\n    const item: GridsterItem = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x < item.x) {\n        item.x = oldItem.x;\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y < item.y) {\n        item.y = oldItem.y;\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (!this.gridster.$options.enableOccupiedCellDrop && this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {CompactType} from './gridsterConfig.interface';\n\n@Injectable()\nexport class GridsterCompact {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  checkCompact(): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactUp();\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactLeft();\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.checkCompactUp();\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\n        this.checkCompactRight();\n        this.checkCompactUp();\n      }\n    }\n  }\n\n  checkCompactItem(item: GridsterItem): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveUpTillCollision(item);\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveLeftTillCollision(item);\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.moveUpTillCollision(item);\n        this.moveRightTillCollision(item);\n      }\n    }\n  }\n\n  checkCompactUp(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveUpTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.y = widget.$item.y;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveUpTillCollision(item: GridsterItem): boolean {\n    item.y -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.y += 1;\n      return false;\n    } else {\n      this.moveUpTillCollision(item);\n      return true;\n    }\n  }\n\n  checkCompactLeft(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveLeftTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  checkCompactRight(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveRightTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveLeftTillCollision(item: GridsterItem): boolean {\n    item.x -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x += 1;\n      return false;\n    } else {\n      this.moveLeftTillCollision(item);\n      return true;\n    }\n  }\n\n  moveRightTillCollision(item) {\n    item.x += 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x -= 1;\n      return false;\n    } else {\n      this.moveRightTillCollision(item);\n      return true;\n    }\n  }\n}\n","import {Injectable, Renderer2} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridType} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Injectable()\nexport class GridsterRenderer {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\n    if (this.gridster.mobile) {\n      this.clearCellPosition(renderer, el);\n      if (this.gridster.$options.keepFixedHeightInMobile) {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\n      } else {\n        renderer.setStyle(el, 'height',  (item.rows * this.gridster.curWidth / item.cols ) + 'px');\n      }\n      if (this.gridster.$options.keepFixedWidthInMobile) {\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\n      } else {\n        renderer.setStyle(el, 'width', '');\n      }\n\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n      renderer.setStyle(el, 'margin-right', '');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\n      // set the cell style\n      this.setCellPosition(renderer, el, x, y);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom: string | null = null;\n      let marginRight: string | null = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, 'margin-right', marginRight);\n    }\n  }\n\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      this.gridster.curColWidth = this.gridster.curRowHeight;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n\n    if (this.gridster.mobile) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n\n  getGridColumnStyle(i: number) {\n    return {\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getGridRowStyle(i: number) {\n    return {\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getLeftPosition(d: number): Object {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateX(' + d + 'px)',\n      };\n    } else {\n      return {\n        left: (this.getLeftMargin() + d) + 'px'\n      };\n    }\n  }\n\n  getTopPosition(d: number): Object {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateY(' + d + 'px)',\n      };\n    } else {\n      return {\n        top: this.getTopMargin() + d + 'px'\n      };\n    }\n  }\n\n  clearCellPosition(renderer: Renderer2, el: any): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      renderer.setStyle(el, 'transform', '');\n    } else {\n      renderer.setStyle(el, 'top', '');\n      renderer.setStyle(el, 'left', '');\n    }\n  }\n\n  setCellPosition(renderer: Renderer2, el: any, x: number, y: number): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      const transform = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n    } else {\n      renderer.setStyle(el, 'left', this.getLeftMargin() + x + 'px');\n      renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\n    }\n  }\n\n  getLeftMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginLeft !== null) {\n        return this.gridster.$options.outerMarginLeft;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  getTopMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginTop !== null) {\n        return this.gridster.$options.outerMarginTop;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation,\n  Inject\n} from '@angular/core';\n\nimport {GridsterConfigService} from './gridsterConfig.constant';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfigS} from './gridsterConfigS.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Component({\n  selector: 'gridster',\n  templateUrl: './gridster.html',\n  styleUrls: ['./gridster.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterComponent implements OnInit, OnChanges, OnDestroy, GridsterComponentInterface {\n  @Input() options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItem | null;\n  previewStyle: () => void;\n  el: any;\n  $options: GridsterConfigS;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns = 0;\n  rows = 0;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  gridRenderer: GridsterRenderer;\n\n  constructor(@Inject(ElementRef) el: ElementRef, @Inject(Renderer2) public renderer: Renderer2, @Inject(ChangeDetectorRef) public cdRef: ChangeDetectorRef, @Inject(NgZone) public zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n  }\n\n  static checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\n    return item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n  }\n\n  ngOnInit(): void {\n    if (this.options.initCallback) {\n      this.options.initCallback(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.options) {\n      this.setOptions();\n      this.options.api = {\n        optionsChanged: this.optionsChanged.bind(this),\n        resize: this.onResize.bind(this),\n        getNextPossiblePosition: this.getNextPossiblePosition.bind(this),\n        getFirstPossiblePosition: this.getFirstPossiblePosition.bind(this),\n        getLastPossiblePosition: this.getLastPossiblePosition.bind(this),\n      };\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows;\n      this.setGridSize();\n      this.calculateLayout();\n    }\n  }\n\n  resize(): void {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n\n  setOptions(): void {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize.bind(this));\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.updateOptions();\n    }\n    this.calculateLayout();\n  }\n\n  ngOnDestroy(): void {\n    if (this.windowResize) {\n      this.windowResize();\n    }\n    if (this.options && this.options.destroyCallback) {\n      this.options.destroyCallback(this);\n    }\n    if (this.options && this.options.api) {\n      this.options.api.resize = undefined;\n      this.options.api.optionsChanged = undefined;\n      this.options.api.getNextPossiblePosition = undefined;\n      this.options.api = undefined;\n    }\n    this.emptyCell.destroy();\n    delete this.emptyCell;\n    this.compact.destroy();\n    delete this.compact;\n  }\n\n  onResize(): void {\n    this.setGridSize();\n    this.calculateLayout();\n  }\n\n  checkIfToResize(): boolean {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n\n  setGridSize(): void {\n    const el = this.el;\n    let width = el.clientWidth;\n    let height = el.clientHeight;\n    if (this.$options.setGridSize || this.$options.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setGridDimensions(): void {\n    this.setGridSize();\n    if (!this.mobile && this.$options.mobileBreakpoint > this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.addClass(this.el, 'mobile');\n    } else if (this.mobile && this.$options.mobileBreakpoint < this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.removeClass(this.el, 'mobile');\n    }\n    let rows = this.$options.minRows, columns = this.$options.minCols;\n\n    let widgetsIndex = this.grid.length - 1, widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (!widget.notPlaced) {\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\n      }\n    }\n\n    if (this.columns !== columns || this.rows !== rows) {\n      this.columns = columns;\n      this.rows = rows;\n      if (this.options.gridSizeChangedCallback) {\n        this.options.gridSizeChangedCallback(this);\n      }\n    }\n  }\n\n  calculateLayout(): void {\n    if (this.compact) {\n      this.compact.checkCompact();\n    }\n\n    this.setGridDimensions();\n    if (this.$options.outerMargin) {\n      let marginWidth = -this.$options.margin;\n      if (this.$options.outerMarginLeft !== null) {\n        marginWidth += this.$options.outerMarginLeft;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginRight !== null) {\n        marginWidth += this.$options.outerMarginRight;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\n      }\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n      let marginHeight = -this.$options.margin;\n      if (this.$options.outerMarginTop !== null) {\n        marginHeight += this.$options.outerMarginTop;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginBottom !== null) {\n        marginHeight += this.$options.outerMarginBottom;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\n      }\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n    } else {\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows;\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\n    }\n    this.gridRenderer.updateGridster();\n\n    this.updateGrid();\n\n    if (this.$options.setGridSize) {\n      this.renderer.setStyle(this.el, 'width', (this.columns * this.curColWidth + this.$options.margin) + 'px');\n      this.renderer.setStyle(this.el, 'height', (this.rows * this.curRowHeight + this.$options.margin) + 'px');\n    } else {\n      this.renderer.setStyle(this.el, 'width', '');\n      this.renderer.setStyle(this.el, 'height', '');\n    }\n\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.setSize();\n      widget.drag.toggle();\n      widget.resize.toggle();\n    }\n\n    setTimeout(this.resize.bind(this), 100);\n  }\n\n  updateGrid(): void {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = Math.max(this.columns, Math.floor(this.curWidth / this.curColWidth)) || 0;\n    this.gridRows.length = Math.max(this.rows, Math.floor(this.curHeight / this.curRowHeight)) || 0;\n    this.cdRef.markForCheck();\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    if (itemComponent.$item.cols === undefined) {\n      itemComponent.$item.cols = this.$options.defaultItemCols;\n      itemComponent.item.cols = itemComponent.$item.cols;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.rows === undefined) {\n      itemComponent.$item.rows = this.$options.defaultItemRows;\n      itemComponent.item.rows = itemComponent.$item.rows;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\n      this.autoPositionItem(itemComponent);\n    } else if (this.checkCollision(itemComponent.$item)) {\n      if (!this.$options.disableWarnings) {\n        itemComponent.notPlaced = true;\n        console.warn('Can\\'t be placed in the bounds of the dashboard, trying to auto position!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n      if (!this.$options.disableAutoPositionOnConflict) {\n        this.autoPositionItem(itemComponent);\n      } else {\n        itemComponent.notPlaced = true;\n      }\n    }\n    this.grid.push(itemComponent);\n    this.calculateLayoutDebounce();\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\n    this.calculateLayoutDebounce();\n    if (this.options.itemRemovedCallback) {\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\n    }\n  }\n\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItem(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n\n  checkGridCollision(item: GridsterItem): boolean {\n    const noNegativePosition = item.y > -1 && item.x > -1;\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\n    const area = item.cols * item.rows;\n    const inMinArea = minAreaLimit <= area;\n    const inMaxArea = maxAreaLimit >= area;\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\n  }\n\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n\n\n  autoPositionItem(itemComponent: GridsterItemComponentInterface): void {\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\n      itemComponent.notPlaced = false;\n      itemComponent.item.x = itemComponent.$item.x;\n      itemComponent.item.y = itemComponent.$item.y;\n      itemComponent.itemChanged();\n    } else {\n      itemComponent.notPlaced = true;\n      if (!this.$options.disableWarnings) {\n        console.warn('Can\\'t be placed in the bounds of the dashboard!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n    }\n  }\n\n  getNextPossiblePosition(newItem: GridsterItem, startingFrom: { y?: number, x?: number } = {}): boolean {\n    if (newItem.cols === -1) {\n      newItem.cols = this.$options.defaultItemCols;\n    }\n    if (newItem.rows === -1) {\n      newItem.rows = this.$options.defaultItemRows;\n    }\n    this.setGridDimensions();\n    let rowsIndex = startingFrom.y || 0, colsIndex;\n    for (; rowsIndex < this.rows; rowsIndex++) {\n      newItem.y = rowsIndex;\n      colsIndex = startingFrom.x || 0;\n      for (; colsIndex < this.columns; colsIndex++) {\n        newItem.x = colsIndex;\n        if (!this.checkCollision(newItem)) {\n          return true;\n        }\n      }\n    }\n    const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\n    const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\n    const addToRows = this.rows <= this.columns && canAddToRows;\n    if (!addToRows && canAddToColumns) {\n      newItem.x = this.columns;\n      newItem.y = 0;\n      return true;\n    } else if (canAddToRows) {\n      newItem.y = this.rows;\n      newItem.x = 0;\n      return true;\n    }\n    return false;\n  }\n\n  getFirstPossiblePosition(item: GridsterItem): GridsterItem {\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem);\n    return tmpItem;\n  }\n\n  getLastPossiblePosition(item: GridsterItem): GridsterItem {\n    let farthestItem: { y: number, x: number } = {y: 0, x: 0};\n    farthestItem = this.grid.reduce((prev: any, curr: GridsterItemComponentInterface) => {\n      const currCoords = {y: curr.$item.y + curr.$item.rows - 1, x: curr.$item.x + curr.$item.cols - 1};\n      if (GridsterUtils.compareItems(prev, currCoords) === 1) {\n        return currCoords;\n      } else {\n        return prev;\n      }\n    }, farthestItem);\n\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem, farthestItem);\n    return tmpItem;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n\n  // ------ Functions for swapWhileDragging option\n\n  // identical to checkCollision() except that here we add bondaries. \n  static checkCollisionTwoItemsForSwaping(item: GridsterItem, item2: GridsterItem): boolean {\n    // if the cols or rows of the items are 1 , doesnt make any sense to set a boundary. Only if the item is bigger we set a boundary\n    const horizontalBoundaryItem1 = item.cols === 1 ? 0 : 1;\n    const horizontalBoundaryItem2 = item2.cols === 1 ? 0 : 1;\n    const verticalBoundaryItem1 = item.rows === 1 ? 0 : 1;\n    const verticalBoundaryItem2 = item2.rows === 1 ? 0 : 1;\n    return item.x + horizontalBoundaryItem1 < item2.x + item2.cols\n      && item.x + item.cols > item2.x + horizontalBoundaryItem2\n      && item.y + verticalBoundaryItem1 < item2.y + item2.rows\n      && item.y + item.rows > item2.y + verticalBoundaryItem2;\n  }\n\n  // identical to checkCollision() except that this function calls findItemWithItemForSwaping() instead of findItemWithItem()\n  checkCollisionForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItemForSwaping(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  // identical to findItemWithItem() except that this function calls checkCollisionTwoItemsForSwaping() instead of checkCollisionTwoItems()\n  findItemWithItemForSwaping(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItemsForSwaping(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  // ------ End of functions for swapWhileDragging option\n\n}\n","import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {Renderer2} from '@angular/core';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport abstract class GridsterItemComponentInterface {\n  item: GridsterItem;\n  $item: GridsterItem;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  updateOptions: () => void;\n  itemChanged: () => void;\n  setSize: () => void;\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\n  canBeDragged: () => boolean;\n  canBeResized: () => boolean;\n  el: any;\n  gridster: GridsterComponentInterface;\n  renderer: Renderer2;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterSwap {\n  private swapedItem: GridsterItemComponentInterface | undefined;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n    delete this.swapedItem;\n  }\n\n  swapItems(): void {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n\n  checkSwapBack(): void {\n    if (this.swapedItem) {\n      const x: number = this.swapedItem.$item.x;\n      const y: number = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n\n    }\n  }\n\n  restoreSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n\n  setSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\n    let gridsterItemCollision;\n    if (this.gridster.$options.swapWhileDragging) {\n      gridsterItemCollision = this.gridster.checkCollisionForSwaping(pushedBy.$item);\n    }else{\n      gridsterItemCollision = this.gridster.checkCollision(pushedBy.$item);\n    }\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n        if (this.gridster.$options.swapWhileDragging) {\n          this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n          this.setSwapItem();\n        }\n      }\n    }\n  }\n}\n","import {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nlet scrollSensitivity: number;\nlet scrollSpeed: number;\nconst intervalDuration = 50;\nlet gridsterElement: any;\nlet resizeEvent: boolean | undefined;\nlet resizeEventType: GridsterResizeEventType | undefined;\nlet intervalE: number;\nlet intervalW: number;\nlet intervalN: number;\nlet intervalS: number;\n\nexport function scroll(gridster: GridsterComponentInterface, left: number, top: number, width: number, height: number,\n                       e: MouseEvent, lastMouse: any,\n                       calculateItemPosition: Function, resize?: boolean, resizeEventScrollType?: GridsterResizeEventType) {\n  scrollSensitivity = gridster.$options.scrollSensitivity;\n  scrollSpeed = gridster.$options.scrollSpeed;\n  gridsterElement = gridster.el;\n  resizeEvent = resize;\n  resizeEventType = resizeEventScrollType;\n\n  const offsetWidth = gridsterElement.offsetWidth;\n  const offsetHeight = gridsterElement.offsetHeight;\n  const offsetLeft = gridsterElement.scrollLeft;\n  const offsetTop = gridsterElement.scrollTop;\n  const elemTopOffset = top - offsetTop;\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\n\n  if (!gridster.$options.disableScrollVertical) {\n    if (lastMouse.clientY < e.clientY && elemBottomOffset < scrollSensitivity) {\n      cancelN();\n      if ((resizeEvent && resizeEventType && !resizeEventType.s) || intervalS) {\n        return;\n      }\n      intervalS = startVertical(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY > e.clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\n      cancelS();\n      if ((resizeEvent && resizeEventType && !resizeEventType.n) || intervalN) {\n        return;\n      }\n      intervalN = startVertical(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY !== e.clientY) {\n      cancelVertical();\n    }\n  }\n\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\n  const elemLeftOffset = left - offsetLeft;\n\n  if (!gridster.$options.disableScrollHorizontal) {\n    if (lastMouse.clientX < e.clientX && elemRightOffset <= scrollSensitivity) {\n      cancelW();\n      if ((resizeEvent && resizeEventType && !resizeEventType.e) || intervalE) {\n        return;\n      }\n      intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX > e.clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\n      cancelE();\n      if ((resizeEvent && resizeEventType && !resizeEventType.w) || intervalW) {\n        return;\n      }\n      intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX !== e.clientX) {\n      cancelHorizontal();\n    }\n  }\n}\n\nfunction startVertical(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientY = lastMouse.clientY;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\n      cancelVertical();\n    }\n    gridsterElement.scrollTop += sign * scrollSpeed;\n    clientY += sign * scrollSpeed;\n    calculateItemPosition({clientX: lastMouse.clientX, clientY: clientY});\n  }, intervalDuration);\n}\n\nfunction startHorizontal(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientX = lastMouse.clientX;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\n      cancelHorizontal();\n    }\n    gridsterElement.scrollLeft += sign * scrollSpeed;\n    clientX += sign * scrollSpeed;\n    calculateItemPosition({clientX: clientX, clientY: lastMouse.clientY});\n  }, intervalDuration);\n}\n\nexport function cancelScroll() {\n  cancelHorizontal();\n  cancelVertical();\n  gridsterElement = undefined;\n}\n\nfunction cancelHorizontal() {\n  cancelE();\n  cancelW();\n}\n\nfunction cancelVertical() {\n  cancelN();\n  cancelS();\n}\n\nfunction cancelE() {\n  if (intervalE) {\n    clearInterval(intervalE);\n    intervalE = 0;\n  }\n}\n\nfunction cancelW() {\n  if (intervalW) {\n    clearInterval(intervalW);\n    intervalW = 0;\n  }\n}\n\nfunction cancelS() {\n  if (intervalS) {\n    clearInterval(intervalS);\n    intervalS = 0;\n  }\n}\n\nfunction cancelN() {\n  if (intervalN) {\n    clearInterval(intervalN);\n    intervalN = 0;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterPush {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsTemp: Array<GridsterItemComponentInterface>;\n  private pushedItemsTempPath: Array<Array<{ x: number, y: number }>>;\n  private pushedItemsPath: Array<Array<{ x: number, y: number }>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private pushedItemsOrder: Array<GridsterItemComponentInterface>;\n  private tryPattern: {\n    fromEast: Array<Function>,\n    fromWest: Array<Function>,\n    fromNorth: Array<Function>,\n    fromSouth: Array<Function>,\n    [key: string]: Array<Function>\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsTemp = [];\n    this.pushedItemsTempPath = [];\n    this.pushedItemsPath = [];\n    gridsterItem['id'] = this.generateTempRandomId();\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string, disable?: boolean): boolean {\n    if (this.gridster.$options.pushItems && !disable) {\n      this.pushedItemsOrder = [];\n      const pushed = this.push(this.gridsterItem, direction);\n      if (!pushed) {\n        this.restoreTempItems();\n      }\n      this.pushedItemsOrder = [];\n      this.pushedItemsTemp = [];\n      this.pushedItemsTempPath = [];\n      this.cleanTempIds();\n      return pushed;\n    } else {\n      return false;\n    }\n  }\n\n  restoreTempItems(): void {\n    let i = this.pushedItemsTemp.length - 1;\n    for (; i > -1; i--) {\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private generateTempRandomId() : string {\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n  }\n\n  private cleanTempIds(){\n    const allItemsWithIds = this.gridster.grid.filter((el:GridsterItemComponentInterface) => el['id']);\n    allItemsWithIds.forEach((el: GridsterItemComponentInterface) => delete el['id']);\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\n      return false;\n    }\n    if (direction === '') {\n      return false;\n    }\n    const a: Array<GridsterItemComponentInterface> = this.gridster.findItemsWithItem(gridsterItem.$item);\n    let i = a.length - 1, itemCollision: GridsterItemComponentInterface;\n    let makePush = true;\n    const b: Array<GridsterItemComponentInterface> = [];\n    for (; i > -1; i--) {\n      itemCollision = a[i];\n      if (!itemCollision['id']) {\n        itemCollision['id'] = this.generateTempRandomId();\n      }\n      if (itemCollision === this.gridsterItem) {\n        makePush = false;\n        break;\n      }\n      if (!itemCollision.canBeDragged()) {\n        makePush = false;\n        break;\n      }\n      const compare = this.pushedItemsTemp.find((el: GridsterItemComponentInterface) => {\n        return el['id'] === itemCollision['id'];\n      });\n      if (compare) {\n        makePush = false;\n        break;\n      }\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else {\n        makePush = false;\n        break;\n      }\n    }\n    if (!makePush) {\n      i = this.pushedItemsOrder.lastIndexOf(b[0]);\n      if (i > -1) {\n        let j = this.pushedItemsOrder.length - 1;\n        for (; j >= i; j--) {\n          itemCollision = this.pushedItemsOrder[j];\n          this.pushedItemsOrder.pop();\n          this.removeFromTempPushed(itemCollision);\n          this.removeFromPushedItem(itemCollision);\n        }\n      }\n    }\n    return makePush;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.south) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.north) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.east) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromWest)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.west) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromEast)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private addToTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\n    if (i === -1) {\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\n      this.pushedItemsTempPath[i] = [];\n    }\n    this.pushedItemsTempPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n  }\n\n  private removeFromTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\n    const tempPosition = this.pushedItemsTempPath[i].pop();\n    if (!tempPosition) {\n      return;\n    }\n    gridsterItem.$item.x = tempPosition.x;\n    gridsterItem.$item.y = tempPosition.y;\n    gridsterItem.setSize();\n    if (!this.pushedItemsTempPath[i].length) {\n      this.pushedItemsTemp.splice(i, 1);\n      this.pushedItemsTempPath.splice(i, 1);\n    }\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{x: gridsterItem.item.x || 0, y: gridsterItem.item.y || 0},\n        {x: gridsterItem.$item.x, y: gridsterItem.$item.y}]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private removeFromPushedItem(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItems.indexOf(gridsterItem);\n    if (i > -1) {\n      this.pushedItemsPath[i].pop();\n      if (!this.pushedItemsPath.length) {\n        this.pushedItems.splice(i, 1);\n        this.pushedItemsPath.splice(i, 1);\n      }\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition, x, y;\n    let change = false;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - j - 1);\n        change = true;\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n    }\n    return change;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\n\nimport {GridsterSwap} from './gridsterSwap.service';\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterDraggable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  offsetLeft: number;\n  offsetTop: number;\n  margin: number;\n  diffTop: number;\n  diffLeft: number;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n  positionX: number;\n  positionY: number;\n  positionXBackup: number;\n  positionYBackup: number;\n  enabled: boolean;\n  dragStartFunction: (event: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  mousemove: Function;\n  mouseup: Function;\n  mouseleave: Function;\n  cancelOnBlur: Function;\n  touchmove: Function;\n  touchend: Function;\n  touchcancel: Function;\n  mousedown: Function;\n  touchstart: Function;\n  push: GridsterPush;\n  swap: GridsterSwap;\n  path: Array<{ x: number, y: number }>;\n  collision: GridsterItemComponentInterface | boolean = false;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.path = [];\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle(true);\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n    delete this.collision;\n    if (this.mousedown) {\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStart(e: any): void {\n    switch (e.which) {\n      case 1:\n        // left mouse button\n        break;\n      case 2:\n      case 3:\n        // right or middle mouse button\n        return;\n    }\n\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.left = this.gridsterItem.left - this.margin;\n    this.top = this.gridsterItem.top - this.margin;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle(true);\n    this.push = new GridsterPush(this.gridsterItem);\n    this.swap = new GridsterSwap(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    this.path.push({x: this.gridsterItem.item.x || 0, y: this.gridsterItem.item.y || 0});\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse,\n      this.calculateItemPositionFromMousePosition.bind(this));\n\n    this.calculateItemPositionFromMousePosition(e);\n  }\n\n  calculateItemPositionFromMousePosition(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.calculateItemPosition();\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n\n    cancelScroll();\n    this.cancelOnBlur();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    this.path = [];\n    if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\n      Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeDrag.bind(this), this.cancelDrag.bind(this));\n    } else {\n      this.makeDrag();\n    }\n    setTimeout(() => {\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle(true);\n      }\n    });\n  }\n\n  cancelDrag() {\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    if (this.push) {\n      this.push.restoreItems();\n    }\n    if (this.swap) {\n      this.swap.restoreSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  makeDrag() {\n    if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable\n      && this.gridster.options.draggable.dropOverItemsCallback\n      && this.collision && this.collision !== true && this.collision.$item) {\n      this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\n    }\n    this.collision = false;\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    if (this.push) {\n      this.push.setPushedItems();\n    }\n    if (this.swap) {\n      this.swap.setSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  calculateItemPosition() {\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\n    this.positionXBackup = this.gridsterItem.$item.x;\n    this.positionYBackup = this.gridsterItem.$item.y;\n    this.gridsterItem.$item.x = this.positionX;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.x = this.positionXBackup;\n    }\n    this.gridsterItem.$item.y = this.positionY;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.y = this.positionYBackup;\n    }\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, this.top);\n\n    if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\n      const lastPosition = this.path[this.path.length - 1];\n      let direction = '';\n      if (lastPosition.x < this.gridsterItem.$item.x) {\n        direction = this.push.fromWest;\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\n        direction = this.push.fromEast;\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\n        direction = this.push.fromNorth;\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\n        direction = this.push.fromSouth;\n      }\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\n      this.swap.swapItems();\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\n      if (this.collision) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\n          this.gridster.movingItem = null;\n        }\n      } else {\n        this.path.push({x: this.gridsterItem.$item.x, y: this.gridsterItem.$item.y});\n      }\n      this.push.checkPushBack();\n    }\n    this.gridster.previewStyle(true);\n  }\n\n  toggle() {\n    const enableDrag = this.gridsterItem.canBeDragged();\n    if (!this.enabled && enableDrag) {\n      this.enabled = !this.enabled;\n      this.dragStartFunction = this.dragStartDelay.bind(this);\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartFunction);\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartFunction);\n    } else if (this.enabled && !enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStartDelay(e: any): void {\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('gridster-item-resizable-handler') > -1) {\n      return;\n    }\n    if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\n      return;\n    }\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.draggable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.draggable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Injectable()\nexport class GridsterPushResize {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsPath: Array<Array<GridsterItem>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private tryPattern: {\n    fromEast: Function,\n    fromWest: Function,\n    fromNorth: Function,\n    fromSouth: Function,\n    [key: string]: Function\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: this.tryWest,\n      fromWest: this.tryEast,\n      fromNorth: this.trySouth,\n      fromSouth: this.tryNorth\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string): boolean {\n    if (this.gridster.$options.pushResizeItems) {\n      return this.push(this.gridsterItem, direction);\n    } else {\n      return false;\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\n      pushedItem.$item.row = pushedItem.item.row || 1;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    const gridsterItemCollision: any = this.gridster.checkCollision(gridsterItem.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true &&\n      gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\n        return true;\n      }\n    } else if (gridsterItemCollision === false) {\n      return true;\n    }\n    return false;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpY = gridsterItemCollide.$item.y;\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.y = backUpY;\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpX = gridsterItemCollide.$item.x;\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.x = backUpX;\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([\n        {\n          x: gridsterItem.item.x || 0,\n          y: gridsterItem.item.y || 0,\n          cols: gridsterItem.item.cols || 0,\n          rows: gridsterItem.item.rows || 0\n        },\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push(\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        });\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition: { x: number, y: number, cols: number, rows: number }, x, y, cols, rows;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      cols = pushedItem.$item.cols;\n      rows = pushedItem.$item.rows;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      pushedItem.$item.cols = lastPosition.cols;\n      pushedItem.$item.rows = lastPosition.rows;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - 1 - j);\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n        pushedItem.$item.cols = cols;\n        pushedItem.$item.rows = rows;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n      return true;\n    }\n    return false;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\n\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterPushResize} from './gridsterPushResize.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterResizable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  itemBackup: Array<number>;\n  resizeEventScrollType: GridsterResizeEventType;\n  directionFunction: Function;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  resizeEnabled: boolean;\n  mousemove: Function;\n  mouseup: Function;\n  mouseleave: Function;\n  cancelOnBlur: Function;\n  touchmove: Function;\n  touchend: Function;\n  touchcancel: Function;\n  push: GridsterPush;\n  pushResize: GridsterPushResize;\n  minHeight: number;\n  minWidth: number;\n  offsetTop: number;\n  offsetLeft: number;\n  diffTop: number;\n  diffLeft: number;\n  diffRight: number;\n  diffBottom: number;\n  margin: number;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  width: number;\n  height: number;\n  newPosition: number;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.itemBackup = [0, 0, 0, 0];\n    this.resizeEventScrollType = {w: false, e: false, n: false, s: false};\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n  }\n\n  dragStart(e: any): void {\n    switch (e.which) {\n      case 1:\n        // left mouse button\n        break;\n      case 2:\n      case 3:\n        // right or middle mouse button\n        return;\n    }\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.left = this.gridsterItem.left;\n    this.top = this.gridsterItem.top;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\n    this.diffTop = e.clientY + this.offsetTop - this.top;\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows)\n      - this.margin;\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols)\n      - this.margin;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle();\n    this.push = new GridsterPush(this.gridsterItem);\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-n') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.directionFunction = this.handleN;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-w') > -1) {\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-s') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.directionFunction = this.handleS;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-e') > -1) {\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleE;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-nw') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleNW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-ne') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleNE;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-sw') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleSW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-se') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleSE;\n    }\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction.bind(this), true,\n      this.resizeEventScrollType);\n    this.directionFunction(e);\n\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    cancelScroll();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.cancelOnBlur();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\n      Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeResize.bind(this), this.cancelResize.bind(this));\n    } else {\n      this.makeResize();\n    }\n    setTimeout(() => {\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n  }\n\n  cancelResize(): void {\n    this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\n    this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    this.push.restoreItems();\n    this.pushResize.restoreItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  makeResize(): void {\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    this.push.setPushedItems();\n    this.pushResize.setPushedItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  handleN(e: any): void {\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.height = this.bottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n      this.top = this.bottom - this.minHeight;\n    }\n    this.newPosition = this.gridster.pixelsToPositionY(this.top + this.margin, Math.floor);\n    if (this.gridsterItem.$item.y !== this.newPosition) {\n      this.itemBackup[1] = this.gridsterItem.$item.y;\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\n      this.gridsterItem.$item.y = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromSouth);\n      this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.y = this.itemBackup[1];\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemTop(this.top);\n    this.setItemHeight(this.height);\n  }\n\n  handleW(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.width = this.right - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n      this.left = this.right - this.minWidth;\n    }\n    this.newPosition = this.gridster.pixelsToPositionX(this.left + this.margin, Math.floor);\n    if (this.gridsterItem.$item.x !== this.newPosition) {\n      this.itemBackup[0] = this.gridsterItem.$item.x;\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\n      this.gridsterItem.$item.x = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromEast);\n      this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.x = this.itemBackup[0];\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemLeft(this.left);\n    this.setItemWidth(this.width);\n  }\n\n  handleS(e: any): void {\n    this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n    }\n    this.bottom = this.top + this.height;\n    this.newPosition = this.gridster.pixelsToPositionY(this.bottom, Math.ceil);\n    if ((this.gridsterItem.$item.y + this.gridsterItem.$item.rows) !== this.newPosition) {\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\n      this.pushResize.pushItems(this.pushResize.fromNorth);\n      this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemHeight(this.height);\n  }\n\n  handleE(e: any): void {\n    this.width = e.clientX + this.offsetLeft - this.diffRight - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n    }\n    this.right = this.left + this.width;\n    this.newPosition = this.gridster.pixelsToPositionX(this.right, Math.ceil);\n    if ((this.gridsterItem.$item.x + this.gridsterItem.$item.cols) !== this.newPosition) {\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\n      this.pushResize.pushItems(this.pushResize.fromWest);\n      this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemWidth(this.width);\n  }\n\n  handleNW(e: any): void {\n    this.handleN(e);\n    this.handleW(e);\n  }\n\n  handleNE(e: any): void {\n    this.handleN(e);\n    this.handleE(e);\n  }\n\n  handleSW(e: any): void {\n    this.handleS(e);\n    this.handleW(e);\n  }\n\n  handleSE(e: any): void {\n    this.handleS(e);\n    this.handleE(e);\n  }\n\n  toggle(): void {\n    this.resizeEnabled = this.gridsterItem.canBeResized();\n  }\n\n  dragStartDelay(e: any): void {\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.resizable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.resizable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n\n  setItemTop(top: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, top);\n  }\n\n  setItemLeft(left: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, left, this.top);\n  }\n\n  setItemHeight(height: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\n  }\n\n  setItemWidth(width: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\n  }\n}\n","import {Component, ElementRef, Host, Input, NgZone, OnDestroy, OnInit, Renderer2, ViewEncapsulation, Inject} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-item',\n  templateUrl: './gridsterItem.html',\n  styleUrls: ['./gridsterItem.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\n  @Input() item: GridsterItem;\n  $item: GridsterItem;\n  el: any;\n  gridster: GridsterComponent;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  init: boolean;\n\n  constructor(@Inject(ElementRef) el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2, @Inject(NgZone) private zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1,\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n\n  ngOnInit(): void {\n    this.updateOptions();\n    this.gridster.addItem(this);\n  }\n\n  updateOptions(): void {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      dragEnabled: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.gridster.removeItem(this);\n    delete this.gridster;\n    this.drag.destroy();\n    delete this.drag;\n    this.resize.destroy();\n    delete this.resize;\n  }\n\n  setSize(): void {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n    }\n    this.top = top;\n    this.left = left;\n  }\n\n  itemChanged(): void {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n  }\n\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayoutDebounce();\n      this.itemChanged();\n    }\n  }\n\n  canBeDragged(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\n  }\n\n  canBeResized(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\n  }\n\n}\n","import {Component, ElementRef, Host, OnDestroy, Renderer2, ViewEncapsulation, Inject} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-preview',\n  template: '',\n  styleUrls: ['./gridsterPreview.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterPreviewComponent implements OnDestroy {\n  el: any;\n  gridster: GridsterComponent;\n\n  constructor(@Inject(ElementRef)  el: ElementRef,  gridster: GridsterComponent, @Inject(Renderer2) public renderer: Renderer2) {\n    this.el = el.nativeElement;\n    this.gridster = gridster;\n    this.gridster.previewStyle = this.previewStyle.bind(this);\n  }\n\n  ngOnDestroy(): void {\n    delete this.el;\n    delete this.gridster.previewStyle;\n    delete this.gridster;\n  }\n\n  previewStyle(drag?: boolean): void {\n    if (!this.gridster.movingItem) {\n      this.renderer.setStyle(this.el, 'display', '');\n    } else {\n      if (this.gridster.compact && drag) {\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\n      }\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\nimport {GridsterItemComponent} from './gridsterItem.component';\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\n\n@NgModule({\n  declarations: [\n    GridsterComponent,\n    GridsterItemComponent,\n    GridsterPreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [GridsterComponent, GridsterItemComponent],\n  providers: [],\n  bootstrap: [],\n  entryComponents: [GridsterComponent, GridsterItemComponent]\n})\nexport class GridsterModule {\n}\n"]}